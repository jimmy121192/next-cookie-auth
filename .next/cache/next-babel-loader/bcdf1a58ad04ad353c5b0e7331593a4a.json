{"ast":null,"code":"import axios from 'axios';\nimport Router from 'next/router';\naxios.defaults.withCredentials = true;\nconst WINDOW_USER_SCRIPT_VARIABLE = `__USER__`;\nexport const getUserScript = user => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n};\nexport const getServerSideToken = req => {\n  const {\n    signedCookies = {}\n  } = req;\n\n  if (!signedCookies || !signedCookies.token) {\n    return {};\n  }\n\n  return {\n    user: signedCookies.token\n  };\n};\nexport const getClientSideToken = () => {\n  if (false) {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return {\n      user\n    };\n  }\n\n  return {\n    user: {}\n  };\n};\nexport const authInitialProps = isProtectedRoute => ({\n  req,\n  res\n}) => {\n  const auth = req ? getServerSideToken(req) : getClientSideToken();\n  const currentPath = req ? req.url : window.location.pathname;\n  const user = auth.user;\n  const isAnonymous = !user || user.type !== \"authenticated\";\n\n  if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\n    return redirectUser(res, \"/login\");\n  }\n\n  return {\n    auth\n  };\n};\n\nconst redirectUser = (res, path) => {\n  if (res) {\n    res.redirect(302, path);\n    res.finished = true;\n    return {};\n  }\n\n  Router.replace(path);\n  return {};\n};\n\nexport const loginUser = async (email, password) => {\n  const {\n    data\n  } = await axios.post('/api/login', {\n    email,\n    password\n  }); //destructuring response -> data\n\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n  }\n};\nexport const logoutUser = async () => {\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n  }\n\n  await axios.post('/api/logout');\n  Router.push('/login');\n};\nexport const getUserProfile = async () => {\n  const {\n    data\n  } = await axios.get('/api/profile');\n  return data;\n};","map":{"version":3,"sources":["/Users/jimmytruong/Desktop/Nextjs/next-cookie-auth/lib/auth.js"],"names":["axios","Router","defaults","withCredentials","WINDOW_USER_SCRIPT_VARIABLE","getUserScript","user","JSON","stringify","getServerSideToken","req","signedCookies","token","getClientSideToken","window","authInitialProps","isProtectedRoute","res","auth","currentPath","url","location","pathname","isAnonymous","type","redirectUser","path","redirect","finished","replace","loginUser","email","password","data","post","logoutUser","push","getUserProfile","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Router from 'next/router';\n\naxios.defaults.withCredentials = true;\n\nconst WINDOW_USER_SCRIPT_VARIABLE = `__USER__`;\n\nexport const getUserScript = user => {\n    return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n}\nexport const getServerSideToken = req => {\n    const { signedCookies = {} } = req;\n    \n    if(!signedCookies || !signedCookies.token){\n        return {};\n    }\n   \n    return { user:signedCookies.token }\n    \n};\n\nexport const getClientSideToken = () => {\n    if( typeof window !== 'undefined' ){\n        const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n        \n        return {user};\n        \n    }\n    \n    return {user: {}}\n};\n\nexport const authInitialProps = isProtectedRoute =>({req , res}) => {\n    const auth = req ? getServerSideToken(req) : getClientSideToken();\n    const currentPath = req ? req.url : window.location.pathname;\n    const user = auth.user;\n    const isAnonymous = !user || user.type !== \"authenticated\";\n\n    if(isProtectedRoute && isAnonymous && currentPath !== \"/login\"){\n        return redirectUser(res, \"/login\");\n    }\n    return { auth };\n}\n\nconst redirectUser = (res, path) => {\n    if(res){\n        res.redirect(302, path);\n        res.finished = true;\n        return {};\n    }\n\n    Router.replace(path);\n    return {};\n}\n\nexport const loginUser = async (email, password) => {\n    const { data } = await axios.post('/api/login', { email, password }); //destructuring response -> data\n    if(typeof window !== 'undefined'){\n        window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n    }\n}\n\nexport const logoutUser = async () => {\n    if(typeof window !== 'undefined'){\n        window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n    }\n    await axios.post('/api/logout');\n    Router.push('/login');\n}\n\nexport const getUserProfile = async () => {\n    const { data } = await axios.get('/api/profile');\n    return data;\n}"]},"metadata":{},"sourceType":"module"}